#!/usr/bin/env bash

check() {
    command -v "$1" 1>/dev/null
}

notify() {
    check notify-send && {
        notify-send "$@"
        return
    }
    echo "$@"
}

stringToLen() {
    STRING="$1"
    LEN="$2"
    if [ ${#STRING} -gt "$LEN" ]; then
        echo "${STRING:0:$((LEN - 2))}.."
    else
        printf "%-20s" "$STRING"
    fi
}

check checkupdates-with-aur || {
	cat <<EOF
  {"text":"ERR","tooltip":"checkupdates-with-aur is not installed"}
EOF
    exit 1
}
IFS=$'\n'$'\r'

killall -q checkupdates-with-aur
mapfile -t updates < <(checkupdates-with-aur)

text=${#updates[@]}
tooltip="<b>$text î¬© updates (arch+aur) </b>\n"
tooltip+=" <b>$(stringToLen "PkgName" 20) $(stringToLen "PrevVersion" 20) $(stringToLen "NextVersion" 20)</b>\n"
[ "$text" -eq 0 ] && text="" || text+=" ï•ž "

for i in "${updates[@]}"; do
    update="$(stringToLen $(echo "$i" | awk '{print $1}') 20)"
    prev="$(stringToLen $(echo "$i" | awk '{print $2}') 20)"
    next="$(stringToLen $(echo "$i" | awk '{print $4}') 20)"
    tooltip+="<b> $update </b>$prev $next\n"
done
tooltip=${tooltip::-2}

if [[ "$1" == "--update" ]]; then
    if command -v kitty >/dev/null; then
        kitty bash -c 'echo -e "\n\033[1;34m========================================\033[0m"; \
                     echo -e "\033[1;32m      ðŸš€ Updating system ðŸš€      \033[0m"; \
                     echo -e "\033[1;34m========================================\033[0m\n"; \
                     sudo pacman -Syu && yay; \
        read -p "Press Enter to close..."'
    else
        cat <<EOF
        {"text":"ERR","tooltip":"Kitty is not installed"}
EOF
        exit 1
    fi
    exit 0
fi

cat <<EOF
{ "text":"$text", "tooltip":"$tooltip"}
EOF
